        -:    0:Source:/Users/adrianflorea/Codes/C++/OOP/Lab 5-6/Lab 5-6/Lab 5-6/./DynamicArray.h
        -:    0:Graph:main.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1://
        -:    2://  DynamicArray.h
        -:    3://  Lab 5-6
        -:    4://
        -:    5://  Created by Adrian-Paul Florea on 3/25/18.
        -:    6://  Copyright Â© 2018 Adrian-Paul Florea. All rights reserved.
        -:    7://
        -:    8:
        -:    9:#ifndef DynamicArray_h
        -:   10:#define DynamicArray_h
        -:   11:
        -:   12:#include "Filter.h"
        -:   13:#include "Tutorial.h"
        -:   14:
        -:   15:template <typename TElement> class DynamicArray {
        -:   16:private:
        -:   17:  TElement *elems;
        -:   18:  int size;
        -:   19:  int capacity;
        -:   20:
        -:   21:public:
        -:   22:  // default constructor for a DynamicArray
        -:   23:  DynamicArray(int capacity = 10);
        -:   24:
        -:   25:  // copy constructor for a DynamicArray
        -:   26:  DynamicArray(const DynamicArray &v);
        -:   27:  ~DynamicArray();
        -:   28:
        -:   29:  // assignment operator for a DynamicArray
        -:   30:  DynamicArray &operator=(const DynamicArray &v);
        -:   31:  DynamicArray &operator-(const TElement &e);
        -:   32:  TElement operator[](int pos) const;
        -:   33:  // friend bool operator==(const DynamicArray &a, const DynamicArray &b);
        -:   34:
        -:   35:  // Adds an element to the current DynamicArray.
        -:   36:  void add(const TElement &e);
        -:   37:  void deleteElement(int pos);
        -:   38:  int getSize() const;
        -:   39:  TElement findByPresenterAndTitle(const std::string &presenter,
        -:   40:                                   const std::string &title);
        -:   41:  int findByPresenterAndTitlePos(const std::string &presenter,
        -:   42:                                 const std::string &title);
        -:   43:
        -:   44:  TElement *getAllElems() const;
        -:   45:  DynamicArray filterBy(const DynamicArray &v,
        -:   46:                        const Comparator<Tutorial> &filter);
        -:   47:  void tests();
        -:   48:  void addTest();
        -:   49:  void deleteTest();
        -:   50:  void getSizeTest();
        -:   51:  void findByTest();
        -:   52:  void findByElementTest();
        -:   53:  void assigmentTest();
        -:   54:  void equalTest();
        -:   55:  void sortTest();
        -:   56:
        -:   57:private:
        -:   58:  // Resizes the current DynamicArray, multiplying its capacity by a given
        -:   59:  // factor (real number).
        -:   60:  void resize(double factor = 2);
        -:   61:};
        -:   62:template <typename TElement>
function _ZN12DynamicArrayI8TutorialEC1Ei called 0 returned 0% blocks executed 0%
function _ZN12DynamicArrayI8TutorialEC2Ei called 0 returned 0% blocks executed 0%
    #####:   63:DynamicArray<TElement>::DynamicArray(int capacity) {
    #####:   64:  this->size = 0;
    #####:   65:  this->capacity = capacity;
    #####:   66:  this->elems = new TElement[capacity];
    $$$$$:   66-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   66-block  1
    $$$$$:   66-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:   66-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:   66-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:   66-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:   66-block  6
    $$$$$:   66-block  7
    #####:   67:}
    $$$$$:   67-block  0
    $$$$$:   67-block  1
        -:   68:template <typename TElement>
function _ZN12DynamicArrayI8TutorialEC1ERKS1_ called 0 returned 0% blocks executed 0%
function _ZN12DynamicArrayI8TutorialEC2ERKS1_ called 0 returned 0% blocks executed 0%
    #####:   69:DynamicArray<TElement>::DynamicArray(const DynamicArray &v) {
    #####:   70:  this->size = v.size;
    #####:   71:  this->capacity = v.capacity;
    #####:   72:  this->elems = new TElement[this->capacity];
    $$$$$:   72-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   72-block  1
    $$$$$:   72-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:   72-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:   72-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:   72-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:   72-block  6
    $$$$$:   72-block  7
    #####:   73:  for (int i = 0; i < this->size; i++)
    $$$$$:   73-block  0
    $$$$$:   73-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:   73-block  2
    #####:   74:    this->elems[i] = v.elems[i];
    $$$$$:   74-block  0
    #####:   75:}
    $$$$$:   75-block  0
    $$$$$:   75-block  1
        -:   76:
function _ZN12DynamicArrayI8TutorialED1Ev called 0 returned 0% blocks executed 0%
function _ZN12DynamicArrayI8TutorialED2Ev called 0 returned 0% blocks executed 0%
    #####:   77:template <typename TElement> DynamicArray<TElement>::~DynamicArray() {
    #####:   78:  delete[] this->elems;
    $$$$$:   78-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   78-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:   78-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:   78-block  3
    #####:   79:}
    $$$$$:   79-block  0
    $$$$$:   79-block  1
        -:   80:template <typename TElement>
        -:   81:DynamicArray<TElement> &DynamicArray<TElement>::
function _ZN12DynamicArrayI8TutorialEaSERKS1_ called 0 returned 0% blocks executed 0%
        -:   82:operator=(const DynamicArray<TElement> &v) {
    #####:   83:  if (this == &v)
    $$$$$:   83-block  0
branch  0 never executed
branch  1 never executed
    #####:   84:    return *this;
    $$$$$:   84-block  0
        -:   85:
    #####:   86:  this->size = v.size;
    #####:   87:  this->capacity = v.capacity;
        -:   88:
    #####:   89:  delete[] this->elems;
    $$$$$:   89-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   89-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:   89-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:   89-block  3
    #####:   90:  this->elems = new TElement[this->capacity];
    $$$$$:   90-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:   90-block  1
    $$$$$:   90-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:   90-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:   90-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:   90-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:   90-block  6
    $$$$$:   90-block  7
    #####:   91:  for (int i = 0; i < this->size; i++)
    $$$$$:   91-block  0
    $$$$$:   91-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:   91-block  2
    #####:   92:    this->elems[i] = v.elems[i];
    $$$$$:   92-block  0
        -:   93:
    #####:   94:  return *this;
    $$$$$:   94-block  0
    #####:   95:}
    $$$$$:   95-block  0
        -:   96:
        -:   97:template <typename TElement>
        -:   98:DynamicArray<TElement> &DynamicArray<TElement>::operator-(const TElement &e) {
        -:   99:  for (int i = 0; i < this->size; i++)
        -:  100:    if (this->elems[i] == e)
        -:  101:      deleteElement(i);
        -:  102:  return *this;
        -:  103:}
        -:  104:
        -:  105:template <typename TElement>
        -:  106:TElement DynamicArray<TElement>::operator[](int pos) const {
        -:  107:  return this->elems[pos];
        -:  108:}
        -:  109:// template <typename TElement>
        -:  110:// bool operator==(const DynamicArray<TElement> &a,
        -:  111://                 const DynamicArray<TElement> &b) {
        -:  112://   if (a.getSize() != b.getSize())
        -:  113://     return false;
        -:  114://   for (int i = 0; i < a.getSize(); i++)
        -:  115://     if (a.elems[i] == b.elems[i])
        -:  116://       continue;
        -:  117://     else
        -:  118://       return false;
        -:  119://   return true;
        -:  120:// }
        -:  121:
        -:  122:template <typename TElement>
function _ZN12DynamicArrayI8TutorialE3addERKS0_ called 0 returned 0% blocks executed 0%
        -:  123:void DynamicArray<TElement>::add(const TElement &e) {
    #####:  124:  if (this->size == this->capacity)
    $$$$$:  124-block  0
branch  0 never executed
branch  1 never executed
    #####:  125:    this->resize();
    $$$$$:  125-block  0
    #####:  126:  this->elems[this->size] = e;
    #####:  127:  this->size++;
    #####:  128:}
    $$$$$:  128-block  0
        -:  129:
        -:  130:template <typename TElement>
function _ZN12DynamicArrayI8TutorialE13deleteElementEi called 0 returned 0% blocks executed 0%
        -:  131:void DynamicArray<TElement>::deleteElement(int pos) {
    #####:  132:  if (pos != -1) {
    $$$$$:  132-block  0
branch  0 never executed
branch  1 never executed
    #####:  133:    for (int i = pos; i < this->size - 1; i++)
    $$$$$:  133-block  0
    $$$$$:  133-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  133-block  2
    #####:  134:      this->elems[i] = this->elems[i + 1];
    $$$$$:  134-block  0
        -:  135:    // we just got rid of a country
    #####:  136:    this->size--;
    #####:  137:  }
    $$$$$:  137-block  0
    #####:  138:}
    $$$$$:  138-block  0
        -:  139:
        -:  140:template <typename TElement>
function _ZN12DynamicArrayI8TutorialE6resizeEd called 0 returned 0% blocks executed 0%
        -:  141:void DynamicArray<TElement>::resize(double factor) {
    #####:  142:  this->capacity *= static_cast<int>(factor);
        -:  143:
    #####:  144:  TElement *els = new TElement[this->capacity];
    $$$$$:  144-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  144-block  1
    $$$$$:  144-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:  144-block  3
branch  4 never executed
branch  5 never executed
    $$$$$:  144-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  144-block  5
branch  8 never executed
branch  9 never executed
    $$$$$:  144-block  6
    $$$$$:  144-block  7
    #####:  145:  for (int i = 0; i < this->size; i++)
    $$$$$:  145-block  0
    $$$$$:  145-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  145-block  2
    #####:  146:    els[i] = this->elems[i];
    $$$$$:  146-block  0
        -:  147:
    #####:  148:  delete[] this->elems;
    $$$$$:  148-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  148-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  148-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  148-block  3
    #####:  149:  this->elems = els;
    #####:  150:}
    $$$$$:  150-block  0
        -:  151:template <typename TElement>
        -:  152:TElement *DynamicArray<TElement>::getAllElems() const {
        -:  153:  return this->elems;
        -:  154:}
        -:  155:
        -:  156:template <typename TElement>
        -:  157:TElement
function _ZN12DynamicArrayI8TutorialE23findByPresenterAndTitleERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ called 0 returned 0% blocks executed 0%
        -:  158:DynamicArray<TElement>::findByPresenterAndTitle(const std::string &presenter,
        -:  159:                                                const std::string &title) {
    #####:  160:  if (this->size == 0)
    $$$$$:  160-block  0
branch  0 never executed
branch  1 never executed
    #####:  161:    return TElement{};
    $$$$$:  161-block  0
    #####:  162:  for (int i = 0; i < this->size; i++) {
    $$$$$:  162-block  0
    $$$$$:  162-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  162-block  2
    #####:  163:    TElement s = this->elems[i];
    #####:  164:    if (s.getPresenter() == presenter && s.getTitle() == title)
    $$$$$:  164-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  164-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  164-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  164-block  3
    $$$$$:  164-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  164-block  5
    $$$$$:  164-block  6
branch  8 never executed
branch  9 never executed
    $$$$$:  164-block  7
    #####:  165:      return s;
    $$$$$:  165-block  0
    #####:  166:  }
    $$$$$:  166-block  0
    $$$$$:  166-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  166-block  2
    $$$$$:  166-block  3
    $$$$$:  166-block  4
    $$$$$:  166-block  5
        -:  167:
    #####:  168:  return TElement{};
    $$$$$:  168-block  0
    #####:  169:}
    $$$$$:  169-block  0
    $$$$$:  169-block  1
        -:  170:
        -:  171:template <typename TElement>
function _ZN12DynamicArrayI8TutorialE26findByPresenterAndTitlePosERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEESA_ called 0 returned 0% blocks executed 0%
        -:  172:int DynamicArray<TElement>::findByPresenterAndTitlePos(
        -:  173:    const std::string &presenter, const std::string &title) {
    #####:  174:  if (this->size == 0)
    $$$$$:  174-block  0
branch  0 never executed
branch  1 never executed
    #####:  175:    return -1;
    $$$$$:  175-block  0
    #####:  176:  for (int i = 0; i < this->size; i++) {
    $$$$$:  176-block  0
    $$$$$:  176-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  176-block  2
    #####:  177:    Tutorial s = this->elems[i];
    #####:  178:    if (s.getPresenter() == presenter && s.getTitle() == title)
    $$$$$:  178-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  178-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  178-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  178-block  3
    $$$$$:  178-block  4
branch  6 never executed
branch  7 never executed
    $$$$$:  178-block  5
    $$$$$:  178-block  6
branch  8 never executed
branch  9 never executed
    $$$$$:  178-block  7
    #####:  179:      return i;
    $$$$$:  179-block  0
    #####:  180:  }
    $$$$$:  180-block  0
    $$$$$:  180-block  1
branch  0 never executed
branch  1 never executed
branch  2 never executed
    $$$$$:  180-block  2
    $$$$$:  180-block  3
    $$$$$:  180-block  4
        -:  181:
    #####:  182:  return -1;
    $$$$$:  182-block  0
    #####:  183:}
    $$$$$:  183-block  0
    $$$$$:  183-block  1
        -:  184:
        -:  185:template <typename TElement>
        -:  186:DynamicArray<TElement>
function _ZN12DynamicArrayI8TutorialE8filterByERKS1_RK10ComparatorIS0_E called 0 returned 0% blocks executed 0%
        -:  187:DynamicArray<TElement>::filterBy(const DynamicArray<TElement> &v,
        -:  188:                                 const Comparator<Tutorial> &filter) {
    #####:  189:  TElement aux;
    #####:  190:    for(int j= 0 ;j<this->size;++j)
    $$$$$:  190-block  0
    $$$$$:  190-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  190-block  2
    #####:  191:  for (int i = 0; i < this->size; ++i) {
    $$$$$:  191-block  0
    $$$$$:  191-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  191-block  2
    #####:  192:    if (filter.include(v.elems[i], v.elems[j])) {
    $$$$$:  192-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  192-block  1
branch  2 never executed
branch  3 never executed
    #####:  193:      aux = v.elems[i];
    $$$$$:  193-block  0
branch  0 never executed
branch  1 never executed
    #####:  194:      v.elems[i] = v.elems[j];
    $$$$$:  194-block  0
branch  0 never executed
branch  1 never executed
    #####:  195:      v.elems[j] = aux;
    $$$$$:  195-block  0
branch  0 never executed
branch  1 never executed
    #####:  196:    }
    $$$$$:  196-block  0
    #####:  197:  }
    $$$$$:  197-block  0
    $$$$$:  197-block  1
    #####:  198:  return v;
    $$$$$:  198-block  0
branch  0 never executed
branch  1 never executed
    #####:  199:}
    $$$$$:  199-block  0
    $$$$$:  199-block  1
    $$$$$:  199-block  2
        -:  200:
function _ZNK12DynamicArrayI8TutorialE7getSizeEv called 0 returned 0% blocks executed 0%
        -:  201:template <typename TElement> int DynamicArray<TElement>::getSize() const {
    #####:  202:  return this->size;
    $$$$$:  202-block  0
        -:  203:}
        -:  204:
function _ZN12DynamicArrayI8TutorialE5testsEv called 0 returned 0% blocks executed 0%
        -:  205:template <typename TElement> void DynamicArray<TElement>::tests() {
    #####:  206:  this->addTest();
    #####:  207:  this->deleteTest();
    #####:  208:  this->getSizeTest();
    #####:  209:  this->findByTest();
    #####:  210:  this->findByElementTest();
    #####:  211:  this->sortTest();
        -:  212:  // this->assigmentTest();
        -:  213:  // this->equalTest();
    #####:  214:}
    $$$$$:  214-block  0
        -:  215:
function _ZN12DynamicArrayI8TutorialE7addTestEv called 0 returned 0% blocks executed 0%
        -:  216:template <typename TElement> void DynamicArray<TElement>::addTest() {
    #####:  217:  DynamicArray<TElement> test;
    #####:  218:  TElement t{"a", "b", Duration{10, 10}, 0, "http://"};
    $$$$$:  218-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  218-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  218-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  218-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  218-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  218-block  5
    $$$$$:  218-block  6
    $$$$$:  218-block  7
    #####:  219:  test.add(t);
    $$$$$:  219-block  0
branch  0 never executed
branch  1 never executed
    #####:  220:  assert(test.findByPresenterAndTitlePos("a", "b") != -1);
    $$$$$:  220-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  220-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  220-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  220-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  220-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  220-block  5
    $$$$$:  220-block  6
    $$$$$:  220-block  7
    $$$$$:  220-block  8
    $$$$$:  220-block  9
    #####:  221:}
    $$$$$:  221-block  0
    $$$$$:  221-block  1
    $$$$$:  221-block  2
    $$$$$:  221-block  3
    $$$$$:  221-block  4
    $$$$$:  221-block  5
    $$$$$:  221-block  6
    $$$$$:  221-block  7
    $$$$$:  221-block  8
function _ZN12DynamicArrayI8TutorialE10deleteTestEv called 0 returned 0% blocks executed 0%
        -:  222:template <typename TElement> void DynamicArray<TElement>::deleteTest() {
    #####:  223:  DynamicArray<TElement> test;
    #####:  224:  TElement t{"a", "b", Duration{10, 10}, 0, "http://"};
    $$$$$:  224-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  224-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  224-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  224-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  224-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  224-block  5
    $$$$$:  224-block  6
    $$$$$:  224-block  7
    #####:  225:  test.add(t);
    $$$$$:  225-block  0
branch  0 never executed
branch  1 never executed
    #####:  226:  test.deleteElement(0);
    $$$$$:  226-block  0
branch  0 never executed
branch  1 never executed
    #####:  227:  assert(test.findByPresenterAndTitlePos("a", "b") == -1);
    $$$$$:  227-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  227-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  227-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  227-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  227-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  227-block  5
    $$$$$:  227-block  6
    $$$$$:  227-block  7
    $$$$$:  227-block  8
    $$$$$:  227-block  9
    #####:  228:}
    $$$$$:  228-block  0
    $$$$$:  228-block  1
    $$$$$:  228-block  2
    $$$$$:  228-block  3
    $$$$$:  228-block  4
    $$$$$:  228-block  5
    $$$$$:  228-block  6
    $$$$$:  228-block  7
    $$$$$:  228-block  8
function _ZN12DynamicArrayI8TutorialE11getSizeTestEv called 0 returned 0% blocks executed 0%
        -:  229:template <typename TElement> void DynamicArray<TElement>::getSizeTest() {
    #####:  230:  DynamicArray<TElement> test;
    #####:  231:  TElement t{"a", "b", Duration{10, 10}, 0, "http://"};
    $$$$$:  231-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  231-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  231-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  231-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  231-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  231-block  5
    $$$$$:  231-block  6
    $$$$$:  231-block  7
    #####:  232:  test.add(t);
    $$$$$:  232-block  0
branch  0 never executed
branch  1 never executed
    #####:  233:  TElement t1{"b", "b", Duration{10, 10}, 0, "http://"};
    $$$$$:  233-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  233-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  233-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  233-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  233-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  233-block  5
    $$$$$:  233-block  6
    $$$$$:  233-block  7
    #####:  234:  test.add(t1);
    $$$$$:  234-block  0
branch  0 never executed
branch  1 never executed
    #####:  235:  TElement t2{"c", "b", Duration{10, 10}, 0, "http://"};
    $$$$$:  235-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  235-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  235-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  235-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  235-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  235-block  5
    $$$$$:  235-block  6
    $$$$$:  235-block  7
    #####:  236:  test.add(t2);
    $$$$$:  236-block  0
branch  0 never executed
branch  1 never executed
    #####:  237:  assert(test.getSize() == 3);
    $$$$$:  237-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  237-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  237-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  237-block  3
    $$$$$:  237-block  4
    $$$$$:  237-block  5
    #####:  238:}
    $$$$$:  238-block  0
    $$$$$:  238-block  1
    $$$$$:  238-block  2
    $$$$$:  238-block  3
    $$$$$:  238-block  4
    $$$$$:  238-block  5
    $$$$$:  238-block  6
    $$$$$:  238-block  7
    $$$$$:  238-block  8
    $$$$$:  238-block  9
    $$$$$:  238-block 10
    $$$$$:  238-block 11
    $$$$$:  238-block 12
    $$$$$:  238-block 13
    $$$$$:  238-block 14
function _ZN12DynamicArrayI8TutorialE10findByTestEv called 0 returned 0% blocks executed 0%
        -:  239:template <typename TElement> void DynamicArray<TElement>::findByTest() {
    #####:  240:  DynamicArray<TElement> test;
    #####:  241:  TElement t{"a", "b", Duration{10, 10}, 0, "http://"};
    $$$$$:  241-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  241-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  241-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  241-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  241-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  241-block  5
    $$$$$:  241-block  6
    $$$$$:  241-block  7
    #####:  242:  test.add(t);
    $$$$$:  242-block  0
branch  0 never executed
branch  1 never executed
    #####:  243:  TElement t1{"b", "b", Duration{10, 10}, 0, "http://"};
    $$$$$:  243-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  243-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  243-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  243-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  243-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  243-block  5
    $$$$$:  243-block  6
    $$$$$:  243-block  7
    #####:  244:  test.add(t1);
    $$$$$:  244-block  0
branch  0 never executed
branch  1 never executed
    #####:  245:  assert(test.findByPresenterAndTitlePos("b", "b") == 1);
    $$$$$:  245-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  245-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  245-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  245-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  245-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  245-block  5
    $$$$$:  245-block  6
    $$$$$:  245-block  7
    $$$$$:  245-block  8
    $$$$$:  245-block  9
    #####:  246:}
    $$$$$:  246-block  0
    $$$$$:  246-block  1
    $$$$$:  246-block  2
    $$$$$:  246-block  3
    $$$$$:  246-block  4
    $$$$$:  246-block  5
    $$$$$:  246-block  6
    $$$$$:  246-block  7
    $$$$$:  246-block  8
    $$$$$:  246-block  9
    $$$$$:  246-block 10
    $$$$$:  246-block 11
    $$$$$:  246-block 12
function _ZN12DynamicArrayI8TutorialE17findByElementTestEv called 0 returned 0% blocks executed 0%
        -:  247:template <typename TElement> void DynamicArray<TElement>::findByElementTest() {
    #####:  248:  DynamicArray<TElement> test;
    #####:  249:  TElement t{"a", "b", Duration{10, 10}, 0, "http://"};
    $$$$$:  249-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  249-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  249-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  249-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  249-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  249-block  5
    $$$$$:  249-block  6
    $$$$$:  249-block  7
    #####:  250:  test.add(t);
    $$$$$:  250-block  0
branch  0 never executed
branch  1 never executed
    #####:  251:  assert(test.findByPresenterAndTitle("a", "b") == t);
    $$$$$:  251-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  251-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  251-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  251-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  251-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  251-block  5
branch 10 never executed
branch 11 never executed
    $$$$$:  251-block  6
    $$$$$:  251-block  7
    $$$$$:  251-block  8
    $$$$$:  251-block  9
    $$$$$:  251-block 10
    $$$$$:  251-block 11
    #####:  252:}
    $$$$$:  252-block  0
    $$$$$:  252-block  1
    $$$$$:  252-block  2
    $$$$$:  252-block  3
    $$$$$:  252-block  4
    $$$$$:  252-block  5
    $$$$$:  252-block  6
    $$$$$:  252-block  7
    $$$$$:  252-block  8
    $$$$$:  252-block  9
        -:  253:
function _ZN12DynamicArrayI8TutorialE8sortTestEv called 0 returned 0% blocks executed 0%
        -:  254:template <typename TElement> void DynamicArray<TElement>::sortTest() {
    #####:  255:  DynamicArray<TElement> test;
    #####:  256:  TElement t{"a", "b", Duration{10, 10}, 0, "http://"};
    $$$$$:  256-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  256-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  256-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  256-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  256-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  256-block  5
    $$$$$:  256-block  6
    $$$$$:  256-block  7
    #####:  257:  test.add(t);
    $$$$$:  257-block  0
branch  0 never executed
branch  1 never executed
    #####:  258:  TElement t1{"b", "b", Duration{2, 10}, 0, "http://"};
    $$$$$:  258-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  258-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  258-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  258-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  258-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  258-block  5
    $$$$$:  258-block  6
    $$$$$:  258-block  7
    #####:  259:  test.add(t1);
    $$$$$:  259-block  0
branch  0 never executed
branch  1 never executed
    #####:  260:  TElement t2{"c", "b", Duration{1, 10}, 0, "http://"};
    $$$$$:  260-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  260-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  260-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  260-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  260-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  260-block  5
    $$$$$:  260-block  6
    $$$$$:  260-block  7
    #####:  261:  test.add(t2);
    $$$$$:  261-block  0
branch  0 never executed
branch  1 never executed
    #####:  262:  FilterTitleBigger filterMore{};
    #####:  263:  test = test.filterBy(test, filterMore);
    $$$$$:  263-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  263-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  263-block  2
    #####:  264:  assert(test.findByPresenterAndTitlePos("b", "b") == 1);
    $$$$$:  264-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  264-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  264-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  264-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  264-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  264-block  5
    $$$$$:  264-block  6
    $$$$$:  264-block  7
    $$$$$:  264-block  8
    $$$$$:  264-block  9
    #####:  265:  assert(test.findByPresenterAndTitlePos("c", "b") == 2);
    $$$$$:  265-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  265-block  1
branch  2 never executed
branch  3 never executed
    $$$$$:  265-block  2
branch  4 never executed
branch  5 never executed
    $$$$$:  265-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  265-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  265-block  5
    $$$$$:  265-block  6
    $$$$$:  265-block  7
    $$$$$:  265-block  8
    $$$$$:  265-block  9
    #####:  266:}
    $$$$$:  266-block  0
    $$$$$:  266-block  1
    $$$$$:  266-block  2
    $$$$$:  266-block  3
    $$$$$:  266-block  4
    $$$$$:  266-block  5
    $$$$$:  266-block  6
    $$$$$:  266-block  7
    $$$$$:  266-block  8
    $$$$$:  266-block  9
    $$$$$:  266-block 10
    $$$$$:  266-block 11
    $$$$$:  266-block 12
    $$$$$:  266-block 13
    $$$$$:  266-block 14
    $$$$$:  266-block 15
    $$$$$:  266-block 16
    $$$$$:  266-block 17
    $$$$$:  266-block 18
    $$$$$:  266-block 19
        -:  267:
        -:  268:// template <typename TElement> void DynamicArray<TElement>::equalTest() {
        -:  269://   DynamicArray<TElement> test;
        -:  270://   DynamicArray<TElement> test1;
        -:  271://   TElement t{"a", "b", Duration{10, 10}, 0, "http://"};
        -:  272://   test.add(t);
        -:  273://   test1.add(t);
        -:  274://   TElement t1{"a", "b", Duration{10, 10}, 0, "http://"};
        -:  275://   test.add(t1);
        -:  276://   test1.add(t1);
        -:  277://   assert((test1 == test) == true);
        -:  278://   test.deleteElement(1);
        -:  279://   assert((test1 == test) == false);
        -:  280:// }
        -:  281://
        -:  282:// template <typename TElement> void DynamicArray<TElement>::assigmentTest() {
        -:  283://   DynamicArray<TElement> test;
        -:  284://   DynamicArray<TElement> test1;
        -:  285://   TElement t{"a", "b", Duration{10, 10}, 0, "http://"};
        -:  286://   test.add(t);
        -:  287://   TElement t1{"a", "b", Duration{10, 10}, 0, "http://"};
        -:  288://   test.add(t1);
        -:  289://   test1 = test;
        -:  290://   assert(test1 == test);
        -:  291:// }
        -:  292:
        -:  293:#endif /* DynamicArray_h */
